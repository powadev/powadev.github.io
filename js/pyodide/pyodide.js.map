{"version":3,"file":"pyodide.js","sources":["../src/js/module.js","../src/js/load-pyodide.js","../src/js/pyproxy.gen.js","../src/js/api.js","../src/js/pyodide.js"],"sourcesContent":["/**\n * The Emscripten Module.\n *\n * @private @type {import('emscripten').Module}\n */\nexport let Module = {};\nModule.noImageDecoding = true;\nModule.noAudioDecoding = true;\nModule.noWasmDecoding = false; // we preload wasm using the built in plugin now\nModule.preloadedWasm = {};\n","import { Module } from \"./module.js\";\n\nconst IN_NODE =\n  typeof process !== \"undefined\" && process.release.name !== \"undefined\";\n\n/** @typedef {import('./pyproxy.js').PyProxy} PyProxy */\n/** @private */\nlet baseURL;\n/**\n * @param {string} indexURL\n * @private\n */\nexport async function initializePackageIndex(indexURL) {\n  baseURL = indexURL;\n  let package_json;\n  if (IN_NODE) {\n    const fsPromises = await import(\"fs/promises\");\n    const package_string = await fsPromises.readFile(\n      `${indexURL}packages.json`\n    );\n    package_json = JSON.parse(package_string);\n  } else {\n    let response = await fetch(`${indexURL}packages.json`);\n    package_json = await response.json();\n  }\n  if (!package_json.packages) {\n    throw new Error(\n      \"Loaded packages.json does not contain the expected key 'packages'.\"\n    );\n  }\n  Module.packages = package_json.packages;\n\n  // compute the inverted index for imports to package names\n  Module._import_name_to_package_name = new Map();\n  for (let name of Object.keys(Module.packages)) {\n    for (let import_name of Module.packages[name].imports) {\n      Module._import_name_to_package_name.set(import_name, name);\n    }\n  }\n}\n\n////////////////////////////////////////////////////////////\n// Package loading\nconst DEFAULT_CHANNEL = \"default channel\";\n\n// Regexp for validating package name and URI\nconst package_uri_regexp = /^.*?([^\\/]*)\\.js$/;\n\nfunction _uri_to_package_name(package_uri) {\n  let match = package_uri_regexp.exec(package_uri);\n  if (match) {\n    return match[1].toLowerCase();\n  }\n}\n\n/**\n * @param {string) url\n * @async\n * @private\n */\nexport let loadScript;\nif (globalThis.document) {\n  // browser\n  loadScript = (url) => import(url);\n} else if (globalThis.importScripts) {\n  // webworker\n  loadScript = async (url) => {\n    // This is async only for consistency\n    globalThis.importScripts(url);\n  };\n} else if (typeof process !== \"undefined\" && process.release.name === \"node\") {\n  const pathPromise = import(\"path\").then((M) => M.default);\n  const fetchPromise = import(\"node-fetch\").then((M) => M.default);\n  const vmPromise = import(\"vm\").then((M) => M.default);\n  loadScript = async (url) => {\n    if (url.includes(\"://\")) {\n      // If it's a url, have to load it with fetch and then eval it.\n      const fetch = await fetchPromise;\n      const vm = await vmPromise;\n      vm.runInThisContext(await (await fetch(url)).text());\n    } else {\n      // Otherwise, hopefully it is a relative path we can load from the file\n      // system.\n      const path = await pathPromise;\n      await import(path.resolve(url));\n    }\n  };\n} else {\n  throw new Error(\"Cannot determine runtime environment\");\n}\n\nfunction recursiveDependencies(\n  names,\n  _messageCallback,\n  errorCallback,\n  sharedLibsOnly\n) {\n  const toLoad = new Map();\n\n  const addPackage = (name) => {\n    name = name.toLowerCase();\n    if (toLoad.has(name)) {\n      return;\n    }\n    toLoad.set(name, DEFAULT_CHANNEL);\n    // If the package is already loaded, we don't add dependencies, but warn\n    // the user later. This is especially important if the loaded package is\n    // from a custom url, in which case adding dependencies is wrong.\n    if (loadedPackages[name] !== undefined) {\n      return;\n    }\n    for (let dep_name of Module.packages[name].depends) {\n      addPackage(dep_name);\n    }\n  };\n  for (let name of names) {\n    const pkgname = _uri_to_package_name(name);\n    if (toLoad.has(pkgname) && toLoad.get(pkgname) !== name) {\n      errorCallback(\n        `Loading same package ${pkgname} from ${name} and ${toLoad.get(\n          pkgname\n        )}`\n      );\n      continue;\n    }\n    if (pkgname !== undefined) {\n      toLoad.set(pkgname, name);\n      continue;\n    }\n    name = name.toLowerCase();\n    if (name in Module.packages) {\n      addPackage(name);\n      continue;\n    }\n    errorCallback(`Skipping unknown package '${name}'`);\n  }\n  if (sharedLibsOnly) {\n    let onlySharedLibs = new Map();\n    for (let c of toLoad) {\n      name = c[0];\n      if (Module.packages[name].shared_library) {\n        onlySharedLibs.set(name, toLoad.get(name));\n      }\n    }\n    return onlySharedLibs;\n  }\n  return toLoad;\n}\n\nasync function _loadPackage(names, messageCallback, errorCallback) {\n  // toLoad is a map pkg_name => pkg_uri\n  let toLoad = recursiveDependencies(names, messageCallback, errorCallback);\n\n  // locateFile is the function used by the .js file to locate the .data\n  // file given the filename\n  Module.locateFile = (path) => {\n    // handle packages loaded from custom URLs\n    let pkg = path.replace(/\\.data$/, \"\");\n    if (toLoad.has(pkg)) {\n      let package_uri = toLoad.get(pkg);\n      if (package_uri != DEFAULT_CHANNEL) {\n        return package_uri.replace(/\\.js$/, \".data\");\n      }\n    }\n    return baseURL + path;\n  };\n\n  if (toLoad.size === 0) {\n    return Promise.resolve(\"No new packages to load\");\n  } else {\n    let packageNames = Array.from(toLoad.keys()).join(\", \");\n    messageCallback(`Loading ${packageNames}`);\n  }\n\n  // This is a collection of promises that resolve when the package's JS file\n  // is loaded. The promises already handle error and never fail.\n  let scriptPromises = [];\n\n  for (let [pkg, uri] of toLoad) {\n    let loaded = loadedPackages[pkg];\n    if (loaded !== undefined) {\n      // If uri is from the DEFAULT_CHANNEL, we assume it was added as a\n      // depedency, which was previously overridden.\n      if (loaded === uri || uri === DEFAULT_CHANNEL) {\n        messageCallback(`${pkg} already loaded from ${loaded}`);\n        continue;\n      } else {\n        errorCallback(\n          `URI mismatch, attempting to load package ${pkg} from ${uri} ` +\n            `while it is already loaded from ${loaded}. To override a dependency, ` +\n            `load the custom package first.`\n        );\n        continue;\n      }\n    }\n    let pkgname = (Module.packages[pkg] && Module.packages[pkg].name) || pkg;\n    let scriptSrc = uri === DEFAULT_CHANNEL ? `${baseURL}${pkgname}.js` : uri;\n    messageCallback(`Loading ${pkg} from ${scriptSrc}`);\n    scriptPromises.push(\n      loadScript(scriptSrc).catch((e) => {\n        errorCallback(`Couldn't load package from URL ${scriptSrc}`, e);\n        toLoad.delete(pkg);\n      })\n    );\n  }\n\n  // When the JS loads, it synchronously adds a runDependency to emscripten.\n  // It then loads the data file, and removes the runDependency from\n  // emscripten. This function returns a promise that resolves when there are\n  // no pending runDependencies.\n  function waitRunDependency() {\n    const promise = new Promise((r) => {\n      Module.monitorRunDependencies = (n) => {\n        if (n === 0) {\n          r();\n        }\n      };\n    });\n    // If there are no pending dependencies left, monitorRunDependencies will\n    // never be called. Since we can't check the number of dependencies,\n    // manually trigger a call.\n    Module.addRunDependency(\"dummy\");\n    Module.removeRunDependency(\"dummy\");\n    return promise;\n  }\n\n  // We must start waiting for runDependencies *after* all the JS files are\n  // loaded, since the number of runDependencies may happen to equal zero\n  // between package files loading.\n  try {\n    await Promise.all(scriptPromises).then(waitRunDependency);\n  } finally {\n    delete Module.monitorRunDependencies;\n  }\n\n  let packageList = [];\n  for (let [pkg, uri] of toLoad) {\n    loadedPackages[pkg] = uri;\n    packageList.push(pkg);\n  }\n\n  let resolveMsg;\n  if (packageList.length > 0) {\n    let packageNames = packageList.join(\", \");\n    resolveMsg = `Loaded ${packageNames}`;\n  } else {\n    resolveMsg = \"No packages loaded\";\n  }\n\n  Module.reportUndefinedSymbols();\n\n  messageCallback(resolveMsg);\n\n  // We have to invalidate Python's import caches, or it won't\n  // see the new files.\n  Module.runPythonSimple(\n    \"import importlib\\n\" + \"importlib.invalidate_caches()\\n\"\n  );\n}\n\n// This is a promise that is resolved iff there are no pending package loads.\n// It never fails.\nlet _package_lock = Promise.resolve();\n\n/**\n * An async lock for package loading. Prevents race conditions in loadPackage.\n * @returns A zero argument function that releases the lock.\n * @private\n */\nasync function acquirePackageLock() {\n  let old_lock = _package_lock;\n  let releaseLock;\n  _package_lock = new Promise((resolve) => (releaseLock = resolve));\n  await old_lock;\n  return releaseLock;\n}\n\n/**\n *\n * The list of packages that Pyodide has loaded.\n * Use ``Object.keys(pyodide.loadedPackages)`` to get the list of names of\n * loaded packages, and ``pyodide.loadedPackages[package_name]`` to access\n * install location for a particular ``package_name``.\n *\n * @type {object}\n */\nexport let loadedPackages = {};\n\n/**\n * @callback LogFn\n * @param {string} msg\n * @returns {void}\n * @private\n */\n\n/**\n * Load a package or a list of packages over the network. This installs the\n * package in the virtual filesystem. The package needs to be imported from\n * Python before it can be used.\n * @param {string | string[] | PyProxy} names Either a single package name or URL\n * or a list of them. URLs can be absolute or relative. The URLs must have\n * file name\n * ``<package-name>.js`` and there must be a file called\n * ``<package-name>.data`` in the same directory. The argument can be a\n * ``PyProxy`` of a list, in which case the list will be converted to\n * Javascript and the ``PyProxy`` will be destroyed.\n * @param {LogFn=} messageCallback A callback, called with progress messages\n *    (optional)\n * @param {LogFn=} errorCallback A callback, called with error/warning\n *    messages (optional)\n * @async\n */\nexport async function loadPackage(names, messageCallback, errorCallback) {\n  if (Module.isPyProxy(names)) {\n    let temp;\n    try {\n      temp = names.toJs();\n    } finally {\n      names.destroy();\n    }\n    names = temp;\n  }\n\n  if (!Array.isArray(names)) {\n    names = [names];\n  }\n  // get shared library packages and load those first\n  // otherwise bad things happen with linking them in firefox.\n  let sharedLibraryNames = [];\n  try {\n    let sharedLibraryPackagesToLoad = recursiveDependencies(\n      names,\n      messageCallback,\n      errorCallback,\n      true\n    );\n    for (let pkg of sharedLibraryPackagesToLoad) {\n      sharedLibraryNames.push(pkg[0]);\n    }\n  } catch (e) {\n    // do nothing - let the main load throw any errors\n  }\n  // override the load plugin so that it imports any dlls also\n  // this only needs to be done for shared library packages because\n  // we assume that if a package depends on a shared library\n  // it needs to have access to it.\n  // not needed for so in standard module because those are linked together\n  // correctly, it is only where linking goes across modules that it needs to\n  // be done. Hence we only put this extra preload plugin in during the shared\n  // library load\n  let oldPlugin;\n  for (let p in Module.preloadPlugins) {\n    if (Module.preloadPlugins[p].canHandle(\"test.so\")) {\n      oldPlugin = Module.preloadPlugins[p];\n      break;\n    }\n  }\n  let dynamicLoadHandler = {\n    get: function (obj, prop) {\n      if (prop === \"handle\") {\n        return function (bytes, name) {\n          obj[prop].apply(obj, arguments);\n          this[\"asyncWasmLoadPromise\"] = this[\"asyncWasmLoadPromise\"].then(\n            function () {\n              Module.loadDynamicLibrary(name, {\n                global: true,\n                nodelete: true,\n              });\n            }\n          );\n        };\n      } else {\n        return obj[prop];\n      }\n    },\n  };\n  var loadPluginOverride = new Proxy(oldPlugin, dynamicLoadHandler);\n  // restore the preload plugin\n  Module.preloadPlugins.unshift(loadPluginOverride);\n\n  let releaseLock = await acquirePackageLock();\n  try {\n    await _loadPackage(\n      sharedLibraryNames,\n      messageCallback || console.log,\n      errorCallback || console.error\n    );\n    Module.preloadPlugins.shift(loadPluginOverride);\n    await _loadPackage(\n      names,\n      messageCallback || console.log,\n      errorCallback || console.error\n    );\n  } finally {\n    releaseLock();\n  }\n}\n","// This file is generated by applying the C preprocessor to core/pyproxy.js\n// It uses the macros defined in core/pyproxy.c\n// Do not edit it directly!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Every public Python entrypoint goes through this file! The main entrypoint is\n * the callPyObject method, but of course one can also execute arbitrary code\n * via the various __dundermethods__ associated to classes.\n *\n * The only entrypoint into Python that avoids this file is our bootstrap method\n * runPythonSimple which is defined in main.c\n *\n * Any time we call into wasm, the call should be wrapped in a try catch block.\n * This way if a Javascript error emerges from the wasm, we can escalate it to a\n * fatal error.\n *\n * This is file is preprocessed with -imacros \"pyproxy.c\". As a result of this,\n * any macros available in pyproxy.c are available here. We only need the flags\n * macros HAS_LENGTH, etc.\n *\n * See Makefile recipe for src/js/pyproxy.js\n */\n\nimport { Module } from \"../js/module.js\";\n\n/**\n * Is the argument a :any:`PyProxy`?\n * @param jsobj {any} Object to test.\n * @returns {jsobj is PyProxy} Is ``jsobj`` a :any:`PyProxy`?\n */\nexport function isPyProxy(jsobj) {\n  return !!jsobj && jsobj.$$ !== undefined && jsobj.$$.type === \"PyProxy\";\n}\nModule.isPyProxy = isPyProxy;\n\nif (globalThis.FinalizationRegistry) {\n  Module.finalizationRegistry = new FinalizationRegistry(([ptr, cache]) => {\n    pyproxy_decref_cache(cache);\n    try {\n      Module._Py_DecRef(ptr);\n    } catch (e) {\n      // I'm not really sure what happens if an error occurs inside of a\n      // finalizer...\n      Module.fatal_error(e);\n    }\n  });\n  // For some unclear reason this code screws up selenium FirefoxDriver. Works\n  // fine in chrome and when I test it in browser. It seems to be sensitive to\n  // changes that don't make a difference to the semantics.\n  // TODO: after v0.17.0 release, fix selenium issues with this code.\n  // Module.bufferFinalizationRegistry = new FinalizationRegistry((ptr) => {\n  //   try {\n  //     Module._PyBuffer_Release(ptr);\n  //     Module._PyMem_Free(ptr);\n  //   } catch (e) {\n  //     Module.fatal_error(e);\n  //   }\n  // });\n} else {\n  Module.finalizationRegistry = { register() {}, unregister() {} };\n  // Module.bufferFinalizationRegistry = finalizationRegistry;\n}\n\nlet pyproxy_alloc_map = new Map();\nModule.pyproxy_alloc_map = pyproxy_alloc_map;\nlet trace_pyproxy_alloc;\nlet trace_pyproxy_dealloc;\n\nModule.enable_pyproxy_allocation_tracing = function () {\n  trace_pyproxy_alloc = function (proxy) {\n    pyproxy_alloc_map.set(proxy, Error().stack);\n  };\n  trace_pyproxy_dealloc = function (proxy) {\n    pyproxy_alloc_map.delete(proxy);\n  };\n};\nModule.disable_pyproxy_allocation_tracing = function () {\n  trace_pyproxy_alloc = function (proxy) {};\n  trace_pyproxy_dealloc = function (proxy) {};\n};\nModule.disable_pyproxy_allocation_tracing();\n\n/**\n * Create a new PyProxy wraping ptrobj which is a PyObject*.\n *\n * The argument cache is only needed to implement the PyProxy.copy API, it\n * allows the copy of the PyProxy to share its attribute cache with the original\n * version. In all other cases, pyproxy_new should be called with one argument.\n *\n * In the case that the Python object is callable, PyProxyClass inherits from\n * Function so that PyProxy objects can be callable. In that case we MUST expose\n * certain properties inherited from Function, but we do our best to remove as\n * many as possible.\n * @private\n */\nModule.pyproxy_new = function (ptrobj, cache) {\n  let flags = Module._pyproxy_getflags(ptrobj);\n  let cls = Module.getPyProxyClass(flags);\n  // Reflect.construct calls the constructor of Module.PyProxyClass but sets\n  // the prototype as cls.prototype. This gives us a way to dynamically create\n  // subclasses of PyProxyClass (as long as we don't need to use the \"new\n  // cls(ptrobj)\" syntax).\n  let target;\n  if (flags & (1 << 8)) {\n    // To make a callable proxy, we must call the Function constructor.\n    // In this case we are effectively subclassing Function.\n    target = Reflect.construct(Function, [], cls);\n    // Remove undesirable properties added by Function constructor. Note: we\n    // can't remove \"arguments\" or \"caller\" because they are not configurable\n    // and not writable\n    delete target.length;\n    delete target.name;\n    // prototype isn't configurable so we can't delete it but it's writable.\n    target.prototype = undefined;\n  } else {\n    target = Object.create(cls.prototype);\n  }\n  if (!cache) {\n    // The cache needs to be accessed primarily from the C function\n    // _pyproxy_getattr so we make a hiwire id.\n    let cacheId = Module.hiwire.new_value(new Map());\n    cache = { cacheId, refcnt: 0 };\n  }\n  cache.refcnt++;\n  Object.defineProperty(target, \"$$\", {\n    value: { ptr: ptrobj, type: \"PyProxy\", borrowed: (!!0), cache },\n  });\n  Module._Py_IncRef(ptrobj);\n  let proxy = new Proxy(target, PyProxyHandlers);\n  trace_pyproxy_alloc(proxy);\n  Module.finalizationRegistry.register(proxy, [ptrobj, cache], proxy);\n  return proxy;\n};\n\nfunction _getPtr(jsobj) {\n  let ptr = jsobj.$$.ptr;\n  if (ptr === null) {\n    throw new Error(\n      jsobj.$$.destroyed_msg || \"Object has already been destroyed\"\n    );\n  }\n  return ptr;\n}\n\nlet pyproxyClassMap = new Map();\n/**\n * Retreive the appropriate mixins based on the features requested in flags.\n * Used by pyproxy_new. The \"flags\" variable is produced by the C function\n * pyproxy_getflags. Multiple PyProxies with the same set of feature flags\n * will share the same prototype, so the memory footprint of each individual\n * PyProxy is minimal.\n * @private\n */\nModule.getPyProxyClass = function (flags) {\n  let result = pyproxyClassMap.get(flags);\n  if (result) {\n    return result;\n  }\n  let descriptors = {};\n  for (let [feature_flag, methods] of [\n    [(1 << 0), PyProxyLengthMethods],\n    [(1 << 1), PyProxyGetItemMethods],\n    [(1 << 2), PyProxySetItemMethods],\n    [(1 << 3), PyProxyContainsMethods],\n    [(1 << 4), PyProxyIterableMethods],\n    [(1 << 5), PyProxyIteratorMethods],\n    [(1 << 6), PyProxyAwaitableMethods],\n    [(1 << 7), PyProxyBufferMethods],\n    [(1 << 8), PyProxyCallableMethods],\n  ]) {\n    if (flags & feature_flag) {\n      Object.assign(\n        descriptors,\n        Object.getOwnPropertyDescriptors(methods.prototype)\n      );\n    }\n  }\n  // Use base constructor (just throws an error if construction is attempted).\n  descriptors.constructor = Object.getOwnPropertyDescriptor(\n    PyProxyClass.prototype,\n    \"constructor\"\n  );\n  Object.assign(\n    descriptors,\n    Object.getOwnPropertyDescriptors({ $$flags: flags })\n  );\n  let new_proto = Object.create(PyProxyClass.prototype, descriptors);\n  function NewPyProxyClass() {}\n  NewPyProxyClass.prototype = new_proto;\n  pyproxyClassMap.set(flags, NewPyProxyClass);\n  return NewPyProxyClass;\n};\n\n// Static methods\nModule.PyProxy_getPtr = _getPtr;\nModule.pyproxy_mark_borrowed = function (proxy) {\n  proxy.$$.borrowed = (!!1);\n};\n\nconst pyproxy_cache_destroyed_msg =\n  \"This borrowed attribute proxy was automatically destroyed in the \" +\n  \"process of destroying the proxy it was borrowed from. Try using the 'copy' method.\";\n\nfunction pyproxy_decref_cache(cache) {\n  if (!cache) {\n    return;\n  }\n  cache.refcnt--;\n  if (cache.refcnt === 0) {\n    let cache_map = Module.hiwire.pop_value(cache.cacheId);\n    for (let proxy_id of cache_map.values()) {\n      Module.pyproxy_destroy(\n        Module.hiwire.pop_value(proxy_id),\n        pyproxy_cache_destroyed_msg\n      );\n    }\n  }\n}\n\nModule.pyproxy_destroy = function (proxy, destroyed_msg) {\n  let ptrobj = _getPtr(proxy);\n  Module.finalizationRegistry.unregister(proxy);\n  // Maybe the destructor will call Javascript code that will somehow try\n  // to use this proxy. Mark it deleted before decrementing reference count\n  // just in case!\n  proxy.$$.ptr = null;\n  proxy.$$.destroyed_msg = destroyed_msg;\n  pyproxy_decref_cache(proxy.$$.cache);\n  try {\n    Module._Py_DecRef(ptrobj);\n    trace_pyproxy_dealloc(proxy);\n  } catch (e) {\n    Module.fatal_error(e);\n  }\n};\n\n// Now a lot of boilerplate to wrap the abstract Object protocol wrappers\n// defined in pyproxy.c in Javascript functions.\n\nModule.callPyObjectKwargs = function (ptrobj, ...jsargs) {\n  // We don't do any checking for kwargs, checks are in PyProxy.callKwargs\n  // which only is used when the keyword arguments come from the user.\n  let kwargs = jsargs.pop();\n  let num_pos_args = jsargs.length;\n  let kwargs_names = Object.keys(kwargs);\n  let kwargs_values = Object.values(kwargs);\n  let num_kwargs = kwargs_names.length;\n  jsargs.push(...kwargs_values);\n\n  let idargs = Module.hiwire.new_value(jsargs);\n  let idkwnames = Module.hiwire.new_value(kwargs_names);\n  let idresult;\n  try {\n    idresult = Module.__pyproxy_apply(\n      ptrobj,\n      idargs,\n      num_pos_args,\n      idkwnames,\n      num_kwargs\n    );\n  } catch (e) {\n    Module.fatal_error(e);\n  } finally {\n    Module.hiwire.decref(idargs);\n    Module.hiwire.decref(idkwnames);\n  }\n  if (idresult === 0) {\n    Module._pythonexc2js();\n  }\n  return Module.hiwire.pop_value(idresult);\n};\n\nModule.callPyObject = function (ptrobj, ...jsargs) {\n  return Module.callPyObjectKwargs(ptrobj, ...jsargs, {});\n};\n\n/**\n * @typedef {(PyProxyClass & {[x : string] : Py2JsResult})} PyProxy\n * @typedef { PyProxy | number | bigint | string | boolean | undefined } Py2JsResult\n */\nclass PyProxyClass {\n  constructor() {\n    throw new TypeError(\"PyProxy is not a constructor\");\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"PyProxy\";\n  }\n  /**\n   * The name of the type of the object.\n   *\n   * Usually the value is ``\"module.name\"`` but for builtins or\n   * interpreter-defined types it is just ``\"name\"``. As pseudocode this is:\n   *\n   * .. code-block:: python\n   *\n   *    ty = type(x)\n   *    if ty.__module__ == 'builtins' or ty.__module__ == \"__main__\":\n   *        return ty.__name__\n   *    else:\n   *        ty.__module__ + \".\" + ty.__name__\n   *\n   * @type {string}\n   */\n  get type() {\n    let ptrobj = _getPtr(this);\n    return Module.hiwire.pop_value(Module.__pyproxy_type(ptrobj));\n  }\n  /**\n   * @returns {string}\n   */\n  toString() {\n    let ptrobj = _getPtr(this);\n    let jsref_repr;\n    try {\n      jsref_repr = Module.__pyproxy_repr(ptrobj);\n    } catch (e) {\n      Module.fatal_error(e);\n    }\n    if (jsref_repr === 0) {\n      Module._pythonexc2js();\n    }\n    return Module.hiwire.pop_value(jsref_repr);\n  }\n  /**\n   * Destroy the ``PyProxy``. This will release the memory. Any further\n   * attempt to use the object will raise an error.\n   *\n   * In a browser supporting `FinalizationRegistry\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry>`_\n   * Pyodide will automatically destroy the ``PyProxy`` when it is garbage\n   * collected, however there is no guarantee that the finalizer will be run\n   * in a timely manner so it is better to ``destroy`` the proxy explicitly.\n   *\n   * @param {string} [destroyed_msg] The error message to print if use is\n   *        attempted after destroying. Defaults to \"Object has already been\n   *        destroyed\".\n   */\n  destroy(destroyed_msg) {\n    if (!this.$$.borrowed) {\n      Module.pyproxy_destroy(this, destroyed_msg);\n    }\n  }\n  /**\n   * Make a new PyProxy pointing to the same Python object.\n   * Useful if the PyProxy is destroyed somewhere else.\n   * @returns {PyProxy}\n   */\n  copy() {\n    let ptrobj = _getPtr(this);\n    return Module.pyproxy_new(ptrobj, this.$$.cache);\n  }\n  /**\n   * Converts the ``PyProxy`` into a Javascript object as best as possible. By\n   * default does a deep conversion, if a shallow conversion is desired, you can\n   * use ``proxy.toJs({depth : 1})``. See :ref:`Explicit Conversion of PyProxy\n   * <type-translations-pyproxy-to-js>` for more info.\n   *\n   * @param {object} options\n   * @param {number} [options.depth] How many layers deep to perform the\n   * conversion. Defaults to infinite.\n   * @param {array} [options.pyproxies] If provided, ``toJs`` will store all\n   * PyProxies created in this list. This allows you to easily destroy all the\n   * PyProxies by iterating the list without having to recurse over the\n   * generated structure. The most common use case is to create a new empty\n   * list, pass the list as `pyproxies`, and then later iterate over `pyproxies`\n   * to destroy all of created proxies.\n   * @param {bool} [options.create_pyproxies] If false, ``toJs`` will throw a\n   * ``ConversionError`` rather than producing a ``PyProxy``.\n   * @param {bool} [options.dict_converter] A function to be called on an\n   * iterable of pairs ``[key, value]``. Convert this iterable of pairs to the\n   * desired output. For instance, ``Object.fromEntries`` would convert the dict\n   * to an object, ``Array.from`` converts it to an array of entries, and ``(it) =>\n   * new Map(it)`` converts it to a ``Map`` (which is the default behavior).\n   * @return {any} The Javascript object resulting from the conversion.\n   */\n  toJs({\n    depth = -1,\n    pyproxies,\n    create_pyproxies = (!!1),\n    dict_converter,\n  } = {}) {\n    let ptrobj = _getPtr(this);\n    let idresult;\n    let proxies_id;\n    let dict_converter_id = 0;\n    if (!create_pyproxies) {\n      proxies_id = 0;\n    } else if (pyproxies) {\n      proxies_id = Module.hiwire.new_value(pyproxies);\n    } else {\n      proxies_id = Module.hiwire.new_value([]);\n    }\n    if (dict_converter) {\n      dict_converter_id = Module.hiwire.new_value(dict_converter);\n    }\n    try {\n      idresult = Module._python2js_custom_dict_converter(\n        ptrobj,\n        depth,\n        proxies_id,\n        dict_converter_id\n      );\n    } catch (e) {\n      Module.fatal_error(e);\n    } finally {\n      Module.hiwire.decref(proxies_id);\n      Module.hiwire.decref(dict_converter_id);\n    }\n    if (idresult === 0) {\n      Module._pythonexc2js();\n    }\n    return Module.hiwire.pop_value(idresult);\n  }\n  /**\n   * Check whether the :any:`PyProxy.length` getter is available on this PyProxy. A\n   * Typescript type guard.\n   * @returns {this is PyProxyWithLength}\n   */\n  supportsLength() {\n    return !!(this.$$flags & (1 << 0));\n  }\n  /**\n   * Check whether the :any:`PyProxy.get` method is available on this PyProxy. A\n   * Typescript type guard.\n   * @returns {this is PyProxyWithGet}\n   */\n  supportsGet() {\n    return !!(this.$$flags & (1 << 1));\n  }\n  /**\n   * Check whether the :any:`PyProxy.set` method is available on this PyProxy. A\n   * Typescript type guard.\n   * @returns {this is PyProxyWithSet}\n   */\n  supportsSet() {\n    return !!(this.$$flags & (1 << 2));\n  }\n  /**\n   * Check whether the :any:`PyProxy.has` method is available on this PyProxy. A\n   * Typescript type guard.\n   * @returns {this is PyProxyWithHas}\n   */\n  supportsHas() {\n    return !!(this.$$flags & (1 << 3));\n  }\n  /**\n   * Check whether the PyProxy is iterable. A Typescript type guard for\n   * :any:`PyProxy.[Symbol.iterator]`.\n   * @returns {this is PyProxyIterable}\n   */\n  isIterable() {\n    return !!(this.$$flags & ((1 << 4) | (1 << 5)));\n  }\n  /**\n   * Check whether the PyProxy is iterable. A Typescript type guard for\n   * :any:`PyProxy.next`.\n   * @returns {this is PyProxyIterator}\n   */\n  isIterator() {\n    return !!(this.$$flags & (1 << 5));\n  }\n  /**\n   * Check whether the PyProxy is awaitable. A Typescript type guard, if this\n   * function returns true Typescript considers the PyProxy to be a ``Promise``.\n   * @returns {this is PyProxyAwaitable}\n   */\n  isAwaitable() {\n    return !!(this.$$flags & (1 << 6));\n  }\n  /**\n   * Check whether the PyProxy is a buffer. A Typescript type guard for\n   * :any:`PyProxy.getBuffer`.\n   * @returns {this is PyProxyBuffer}\n   */\n  isBuffer() {\n    return !!(this.$$flags & (1 << 7));\n  }\n  /**\n   * Check whether the PyProxy is a Callable. A Typescript type guard, if this\n   * returns true then Typescript considers the Proxy to be callable of\n   * signature ``(args... : any[]) => PyProxy | number | bigint | string |\n   * boolean | undefined``.\n   * @returns {this is PyProxyCallable}\n   */\n  isCallable() {\n    return !!(this.$$flags & (1 << 8));\n  }\n}\n\n/**\n * @typedef { PyProxy & PyProxyLengthMethods } PyProxyWithLength\n */\n// Controlled by HAS_LENGTH, appears for any object with __len__ or sq_length\n// or mp_length methods\nclass PyProxyLengthMethods {\n  /**\n   * The length of the object.\n   *\n   * Present only if the proxied Python object has a ``__len__`` method.\n   * @returns {number}\n   */\n  get length() {\n    let ptrobj = _getPtr(this);\n    let length;\n    try {\n      length = Module._PyObject_Size(ptrobj);\n    } catch (e) {\n      Module.fatal_error(e);\n    }\n    if (length === -1) {\n      Module._pythonexc2js();\n    }\n    return length;\n  }\n}\n\n/**\n * @typedef {PyProxy & PyProxyGetItemMethods} PyProxyWithGet\n */\n\n// Controlled by HAS_GET, appears for any class with __getitem__,\n// mp_subscript, or sq_item methods\n/**\n * @interface\n */\nclass PyProxyGetItemMethods {\n  /**\n   * This translates to the Python code ``obj[key]``.\n   *\n   * Present only if the proxied Python object has a ``__getitem__`` method.\n   *\n   * @param {any} key The key to look up.\n   * @returns {Py2JsResult} The corresponding value.\n   */\n  get(key) {\n    let ptrobj = _getPtr(this);\n    let idkey = Module.hiwire.new_value(key);\n    let idresult;\n    try {\n      idresult = Module.__pyproxy_getitem(ptrobj, idkey);\n    } catch (e) {\n      Module.fatal_error(e);\n    } finally {\n      Module.hiwire.decref(idkey);\n    }\n    if (idresult === 0) {\n      if (Module._PyErr_Occurred()) {\n        Module._pythonexc2js();\n      } else {\n        return undefined;\n      }\n    }\n    return Module.hiwire.pop_value(idresult);\n  }\n}\n\n/**\n * @typedef {PyProxy & PyProxySetItemMethods} PyProxyWithSet\n */\n// Controlled by HAS_SET, appears for any class with __setitem__, __delitem__,\n// mp_ass_subscript,  or sq_ass_item.\nclass PyProxySetItemMethods {\n  /**\n   * This translates to the Python code ``obj[key] = value``.\n   *\n   * Present only if the proxied Python object has a ``__setitem__`` method.\n   *\n   * @param {any} key The key to set.\n   * @param {any} value The value to set it to.\n   */\n  set(key, value) {\n    let ptrobj = _getPtr(this);\n    let idkey = Module.hiwire.new_value(key);\n    let idval = Module.hiwire.new_value(value);\n    let errcode;\n    try {\n      errcode = Module.__pyproxy_setitem(ptrobj, idkey, idval);\n    } catch (e) {\n      Module.fatal_error(e);\n    } finally {\n      Module.hiwire.decref(idkey);\n      Module.hiwire.decref(idval);\n    }\n    if (errcode === -1) {\n      Module._pythonexc2js();\n    }\n  }\n  /**\n   * This translates to the Python code ``del obj[key]``.\n   *\n   * Present only if the proxied Python object has a ``__delitem__`` method.\n   *\n   * @param {any} key The key to delete.\n   */\n  delete(key) {\n    let ptrobj = _getPtr(this);\n    let idkey = Module.hiwire.new_value(key);\n    let errcode;\n    try {\n      errcode = Module.__pyproxy_delitem(ptrobj, idkey);\n    } catch (e) {\n      Module.fatal_error(e);\n    } finally {\n      Module.hiwire.decref(idkey);\n    }\n    if (errcode === -1) {\n      Module._pythonexc2js();\n    }\n  }\n}\n\n/**\n * @typedef {PyProxy & PyProxyContainsMethods} PyProxyWithHas\n */\n\n// Controlled by HAS_CONTAINS flag, appears for any class with __contains__ or\n// sq_contains\nclass PyProxyContainsMethods {\n  /**\n   * This translates to the Python code ``key in obj``.\n   *\n   * Present only if the proxied Python object has a ``__contains__`` method.\n   *\n   * @param {*} key The key to check for.\n   * @returns {boolean} Is ``key`` present?\n   */\n  has(key) {\n    let ptrobj = _getPtr(this);\n    let idkey = Module.hiwire.new_value(key);\n    let result;\n    try {\n      result = Module.__pyproxy_contains(ptrobj, idkey);\n    } catch (e) {\n      Module.fatal_error(e);\n    } finally {\n      Module.hiwire.decref(idkey);\n    }\n    if (result === -1) {\n      Module._pythonexc2js();\n    }\n    return result === 1;\n  }\n}\n\nclass TempError extends Error {}\n\n/**\n * A helper for [Symbol.iterator].\n *\n * Because \"it is possible for a generator to be garbage collected without\n * ever running its finally block\", we take extra care to try to ensure that\n * we don't leak the iterator. We register it with the finalizationRegistry,\n * but if the finally block is executed, we decref the pointer and unregister.\n *\n * In order to do this, we create the generator with this inner method,\n * register the finalizer, and then return it.\n *\n * Quote from:\n * https://hacks.mozilla.org/2015/07/es6-in-depth-generators-continued/\n *\n * @private\n */\nfunction* iter_helper(iterptr, token) {\n  try {\n    if (iterptr === 0) {\n      throw new TempError();\n    }\n    let item;\n    while ((item = Module.__pyproxy_iter_next(iterptr))) {\n      yield Module.hiwire.pop_value(item);\n    }\n    if (Module._PyErr_Occurred()) {\n      throw new TempError();\n    }\n  } catch (e) {\n    if (e instanceof TempError) {\n      Module._pythonexc2js();\n    } else {\n      Module.fatal_error(e);\n    }\n  } finally {\n    Module.finalizationRegistry.unregister(token);\n    Module._Py_DecRef(iterptr);\n  }\n}\n\n/**\n * @typedef {PyProxy & PyProxyIterableMethods} PyProxyIterable\n */\n\n// Controlled by IS_ITERABLE, appears for any object with __iter__ or tp_iter,\n// unless they are iterators. See: https://docs.python.org/3/c-api/iter.html\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n// This avoids allocating a PyProxy wrapper for the temporary iterator.\nclass PyProxyIterableMethods {\n  /**\n   * This translates to the Python code ``iter(obj)``. Return an iterator\n   * associated to the proxy. See the documentation for `Symbol.iterator\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator>`_.\n   *\n   * Present only if the proxied Python object is iterable (i.e., has an\n   * ``__iter__`` method).\n   *\n   * This will be used implicitly by ``for(let x of proxy){}``.\n   *\n   * @returns {Iterator<Py2JsResult, Py2JsResult, any>} An iterator for the proxied Python object.\n   */\n  [Symbol.iterator]() {\n    let ptrobj = _getPtr(this);\n    let token = {};\n    let iterptr;\n    try {\n      iterptr = Module._PyObject_GetIter(ptrobj);\n    } catch (e) {\n      Module.fatal_error(e);\n    }\n\n    let result = iter_helper(iterptr, token);\n    Module.finalizationRegistry.register(result, [iterptr, undefined], token);\n    return result;\n  }\n}\n\n/**\n * @typedef {PyProxy & PyProxyIteratorMethods} PyProxyIterator\n */\n\n// Controlled by IS_ITERATOR, appears for any object with a __next__ or\n// tp_iternext method.\nclass PyProxyIteratorMethods {\n  [Symbol.iterator]() {\n    return this;\n  }\n  /**\n   * This translates to the Python code ``next(obj)``. Returns the next value\n   * of the generator. See the documentation for `Generator.prototype.next\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next>`_.\n   * The argument will be sent to the Python generator.\n   *\n   * This will be used implicitly by ``for(let x of proxy){}``.\n   *\n   * Present only if the proxied Python object is a generator or iterator\n   * (i.e., has a ``send`` or ``__next__`` method).\n   *\n   * @param {any=} [value] The value to send to the generator. The value will be\n   * assigned as a result of a yield expression.\n   * @returns {IteratorResult<Py2JsResult, Py2JsResult>} An Object with two properties: ``done`` and ``value``.\n   * When the generator yields ``some_value``, ``next`` returns ``{done :\n   * false, value : some_value}``. When the generator raises a\n   * ``StopIteration(result_value)`` exception, ``next`` returns ``{done :\n   * true, value : result_value}``.\n   */\n  next(arg = undefined) {\n    let idresult;\n    // Note: arg is optional, if arg is not supplied, it will be undefined\n    // which gets converted to \"Py_None\". This is as intended.\n    let idarg = Module.hiwire.new_value(arg);\n    let done;\n    try {\n      idresult = Module.__pyproxyGen_Send(_getPtr(this), idarg);\n      done = idresult === 0;\n      if (done) {\n        idresult = Module.__pyproxyGen_FetchStopIterationValue();\n      }\n    } catch (e) {\n      Module.fatal_error(e);\n    } finally {\n      Module.hiwire.decref(idarg);\n    }\n    if (done && idresult === 0) {\n      Module._pythonexc2js();\n    }\n    let value = Module.hiwire.pop_value(idresult);\n    return { done, value };\n  }\n}\n\n// Another layer of boilerplate. The PyProxyHandlers have some annoying logic\n// to deal with straining out the spurious \"Function\" properties \"prototype\",\n// \"arguments\", and \"length\", to deal with correctly satisfying the Proxy\n// invariants, and to deal with the mro\nfunction python_hasattr(jsobj, jskey) {\n  let ptrobj = _getPtr(jsobj);\n  let idkey = Module.hiwire.new_value(jskey);\n  let result;\n  try {\n    result = Module.__pyproxy_hasattr(ptrobj, idkey);\n  } catch (e) {\n    Module.fatal_error(e);\n  } finally {\n    Module.hiwire.decref(idkey);\n  }\n  if (result === -1) {\n    Module._pythonexc2js();\n  }\n  return result !== 0;\n}\n\n// Returns a JsRef in order to allow us to differentiate between \"not found\"\n// (in which case we return 0) and \"found 'None'\" (in which case we return\n// Js_undefined).\nfunction python_getattr(jsobj, jskey) {\n  let ptrobj = _getPtr(jsobj);\n  let idkey = Module.hiwire.new_value(jskey);\n  let idresult;\n  let cacheId = jsobj.$$.cache.cacheId;\n  try {\n    idresult = Module.__pyproxy_getattr(ptrobj, idkey, cacheId);\n  } catch (e) {\n    Module.fatal_error(e);\n  } finally {\n    Module.hiwire.decref(idkey);\n  }\n  if (idresult === 0) {\n    if (Module._PyErr_Occurred()) {\n      Module._pythonexc2js();\n    }\n  }\n  return idresult;\n}\n\nfunction python_setattr(jsobj, jskey, jsval) {\n  let ptrobj = _getPtr(jsobj);\n  let idkey = Module.hiwire.new_value(jskey);\n  let idval = Module.hiwire.new_value(jsval);\n  let errcode;\n  try {\n    errcode = Module.__pyproxy_setattr(ptrobj, idkey, idval);\n  } catch (e) {\n    Module.fatal_error(e);\n  } finally {\n    Module.hiwire.decref(idkey);\n    Module.hiwire.decref(idval);\n  }\n  if (errcode === -1) {\n    Module._pythonexc2js();\n  }\n}\n\nfunction python_delattr(jsobj, jskey) {\n  let ptrobj = _getPtr(jsobj);\n  let idkey = Module.hiwire.new_value(jskey);\n  let errcode;\n  try {\n    errcode = Module.__pyproxy_delattr(ptrobj, idkey);\n  } catch (e) {\n    Module.fatal_error(e);\n  } finally {\n    Module.hiwire.decref(idkey);\n  }\n  if (errcode === -1) {\n    Module._pythonexc2js();\n  }\n}\n\n// See explanation of which methods should be defined here and what they do\n// here:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\nlet PyProxyHandlers = {\n  isExtensible() {\n    return (!!1);\n  },\n  has(jsobj, jskey) {\n    // Note: must report \"prototype\" in proxy when we are callable.\n    // (We can return the wrong value from \"get\" handler though.)\n    let objHasKey = Reflect.has(jsobj, jskey);\n    if (objHasKey) {\n      return (!!1);\n    }\n    // python_hasattr will crash if given a Symbol.\n    if (typeof jskey === \"symbol\") {\n      return (!!0);\n    }\n    if (jskey.startsWith(\"$\")) {\n      jskey = jskey.slice(1);\n    }\n    return python_hasattr(jsobj, jskey);\n  },\n  get(jsobj, jskey) {\n    // Preference order:\n    // 1. stuff from Javascript\n    // 2. the result of Python getattr\n\n    // python_getattr will crash if given a Symbol.\n    if (jskey in jsobj || typeof jskey === \"symbol\") {\n      return Reflect.get(jsobj, jskey);\n    }\n    // If keys start with $ remove the $. User can use initial $ to\n    // unambiguously ask for a key on the Python object.\n    if (jskey.startsWith(\"$\")) {\n      jskey = jskey.slice(1);\n    }\n    // 2. The result of getattr\n    let idresult = python_getattr(jsobj, jskey);\n    if (idresult !== 0) {\n      return Module.hiwire.pop_value(idresult);\n    }\n  },\n  set(jsobj, jskey, jsval) {\n    let descr = Object.getOwnPropertyDescriptor(jsobj, jskey);\n    if (descr && !descr.writable) {\n      throw new TypeError(`Cannot set read only field '${jskey}'`);\n    }\n    // python_setattr will crash if given a Symbol.\n    if (typeof jskey === \"symbol\") {\n      return Reflect.set(jsobj, jskey, jsval);\n    }\n    if (jskey.startsWith(\"$\")) {\n      jskey = jskey.slice(1);\n    }\n    python_setattr(jsobj, jskey, jsval);\n    return (!!1);\n  },\n  deleteProperty(jsobj, jskey) {\n    let descr = Object.getOwnPropertyDescriptor(jsobj, jskey);\n    if (descr && !descr.writable) {\n      throw new TypeError(`Cannot delete read only field '${jskey}'`);\n    }\n    if (typeof jskey === \"symbol\") {\n      return Reflect.deleteProperty(jsobj, jskey);\n    }\n    if (jskey.startsWith(\"$\")) {\n      jskey = jskey.slice(1);\n    }\n    python_delattr(jsobj, jskey);\n    // Must return \"false\" if \"jskey\" is a nonconfigurable own property.\n    // Otherwise Javascript will throw a TypeError.\n    return !descr || descr.configurable;\n  },\n  ownKeys(jsobj) {\n    let ptrobj = _getPtr(jsobj);\n    let idresult;\n    try {\n      idresult = Module.__pyproxy_ownKeys(ptrobj);\n    } catch (e) {\n      Module.fatal_error(e);\n    }\n    if (idresult === 0) {\n      Module._pythonexc2js();\n    }\n    let result = Module.hiwire.pop_value(idresult);\n    result.push(...Reflect.ownKeys(jsobj));\n    return result;\n  },\n  apply(jsobj, jsthis, jsargs) {\n    return jsobj.apply(jsthis, jsargs);\n  },\n};\n\n/**\n * @typedef {PyProxy & Promise<Py2JsResult>} PyProxyAwaitable\n */\n\n/**\n * The Promise / javascript awaitable API.\n * @private\n */\nclass PyProxyAwaitableMethods {\n  /**\n   * This wraps __pyproxy_ensure_future and makes a function that converts a\n   * Python awaitable to a promise, scheduling the awaitable on the Python\n   * event loop if necessary.\n   * @private\n   */\n  _ensure_future() {\n    let ptrobj = _getPtr(this);\n    let resolveHandle;\n    let rejectHandle;\n    let promise = new Promise((resolve, reject) => {\n      resolveHandle = resolve;\n      rejectHandle = reject;\n    });\n    let resolve_handle_id = Module.hiwire.new_value(resolveHandle);\n    let reject_handle_id = Module.hiwire.new_value(rejectHandle);\n    let errcode;\n    try {\n      errcode = Module.__pyproxy_ensure_future(\n        ptrobj,\n        resolve_handle_id,\n        reject_handle_id\n      );\n    } catch (e) {\n      Module.fatal_error(e);\n    } finally {\n      Module.hiwire.decref(reject_handle_id);\n      Module.hiwire.decref(resolve_handle_id);\n    }\n    if (errcode === -1) {\n      Module._pythonexc2js();\n    }\n    return promise;\n  }\n  /**\n   * Runs ``asyncio.ensure_future(awaitable)``, executes\n   * ``onFulfilled(result)`` when the ``Future`` resolves successfully,\n   * executes ``onRejected(error)`` when the ``Future`` fails. Will be used\n   * implictly by ``await obj``.\n   *\n   * See the documentation for\n   * `Promise.then\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then>`_\n   *\n   * Present only if the proxied Python object is `awaitable\n   * <https://docs.python.org/3/library/asyncio-task.html?highlight=awaitable#awaitables>`_.\n   *\n   * @param {Function} onFulfilled A handler called with the result as an\n   * argument if the awaitable succeeds.\n   * @param {Function} onRejected A handler called with the error as an\n   * argument if the awaitable fails.\n   * @returns {Promise} The resulting Promise.\n   */\n  then(onFulfilled, onRejected) {\n    let promise = this._ensure_future();\n    return promise.then(onFulfilled, onRejected);\n  }\n  /**\n   * Runs ``asyncio.ensure_future(awaitable)`` and executes\n   * ``onRejected(error)`` if the future fails.\n   *\n   * See the documentation for\n   * `Promise.catch\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch>`_.\n   *\n   * Present only if the proxied Python object is `awaitable\n   * <https://docs.python.org/3/library/asyncio-task.html?highlight=awaitable#awaitables>`_.\n   *\n   * @param {Function} onRejected A handler called with the error as an\n   * argument if the awaitable fails.\n   * @returns {Promise} The resulting Promise.\n   */\n  catch(onRejected) {\n    let promise = this._ensure_future();\n    return promise.catch(onRejected);\n  }\n  /**\n   * Runs ``asyncio.ensure_future(awaitable)`` and executes\n   * ``onFinally(error)`` when the future resolves.\n   *\n   * See the documentation for\n   * `Promise.finally\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/finally>`_.\n   *\n   * Present only if the proxied Python object is `awaitable\n   * <https://docs.python.org/3/library/asyncio-task.html?highlight=awaitable#awaitables>`_.\n   *\n   *\n   * @param {Function} onFinally A handler that is called with zero arguments\n   * when the awaitable resolves.\n   * @returns {Promise} A Promise that resolves or rejects with the same\n   * result as the original Promise, but only after executing the\n   * ``onFinally`` handler.\n   */\n  finally(onFinally) {\n    let promise = this._ensure_future();\n    return promise.finally(onFinally);\n  }\n}\n\n/**\n * @typedef { PyProxy & PyProxyCallableMethods & ((...args : any[]) => Py2JsResult) } PyProxyCallable\n */\nclass PyProxyCallableMethods {\n  apply(jsthis, jsargs) {\n    return Module.callPyObject(_getPtr(this), ...jsargs);\n  }\n  call(jsthis, ...jsargs) {\n    return Module.callPyObject(_getPtr(this), ...jsargs);\n  }\n  /**\n   * Call the function with key word arguments.\n   * The last argument must be an object with the keyword arguments.\n   */\n  callKwargs(...jsargs) {\n    if (jsargs.length === 0) {\n      throw new TypeError(\n        \"callKwargs requires at least one argument (the key word argument object)\"\n      );\n    }\n    let kwargs = jsargs[jsargs.length - 1];\n    if (\n      kwargs.constructor !== undefined &&\n      kwargs.constructor.name !== \"Object\"\n    ) {\n      throw new TypeError(\"kwargs argument is not an object\");\n    }\n    return Module.callPyObjectKwargs(_getPtr(this), ...jsargs);\n  }\n}\nPyProxyCallableMethods.prototype.prototype = Function.prototype;\n\nlet type_to_array_map = new Map([\n  [\"i8\", Int8Array],\n  [\"u8\", Uint8Array],\n  [\"u8clamped\", Uint8ClampedArray],\n  [\"i16\", Int16Array],\n  [\"u16\", Uint16Array],\n  [\"i32\", Int32Array],\n  [\"u32\", Uint32Array],\n  [\"i32\", Int32Array],\n  [\"u32\", Uint32Array],\n  // if these aren't available, will be globalThis.BigInt64Array will be\n  // undefined rather than raising a ReferenceError.\n  [\"i64\", globalThis.BigInt64Array],\n  [\"u64\", globalThis.BigUint64Array],\n  [\"f32\", Float32Array],\n  [\"f64\", Float64Array],\n  [\"dataview\", DataView],\n]);\n\n/**\n * @typedef {PyProxy & PyProxyBufferMethods} PyProxyBuffer\n */\nclass PyProxyBufferMethods {\n  /**\n   * Get a view of the buffer data which is usable from Javascript. No copy is\n   * ever performed.\n   *\n   * Present only if the proxied Python object supports the `Python Buffer\n   * Protocol <https://docs.python.org/3/c-api/buffer.html>`_.\n   *\n   * We do not support suboffsets, if the buffer requires suboffsets we will\n   * throw an error. Javascript nd array libraries can't handle suboffsets\n   * anyways. In this case, you should use the :any:`toJs` api or copy the\n   * buffer to one that doesn't use suboffets (using e.g.,\n   * `numpy.ascontiguousarray\n   * <https://numpy.org/doc/stable/reference/generated/numpy.ascontiguousarray.html>`_).\n   *\n   * If the buffer stores big endian data or half floats, this function will\n   * fail without an explicit type argument. For big endian data you can use\n   * ``toJs``. `DataViews\n   * <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView>`_\n   * have support for big endian data, so you might want to pass\n   * ``'dataview'`` as the type argument in that case.\n   *\n   * @param {string=} [type] The type of the :any:`PyBuffer.data <pyodide.PyBuffer.data>` field in the\n   * output. Should be one of: ``\"i8\"``, ``\"u8\"``, ``\"u8clamped\"``, ``\"i16\"``,\n   * ``\"u16\"``, ``\"i32\"``, ``\"u32\"``, ``\"i32\"``, ``\"u32\"``, ``\"i64\"``,\n   * ``\"u64\"``, ``\"f32\"``, ``\"f64``, or ``\"dataview\"``. This argument is\n   * optional, if absent ``getBuffer`` will try to determine the appropriate\n   * output type based on the buffer `format string\n   * <https://docs.python.org/3/library/struct.html#format-strings>`_.\n   * @returns {PyBuffer} :any:`PyBuffer <pyodide.PyBuffer>`\n   */\n  getBuffer(type) {\n    let ArrayType = undefined;\n    if (type) {\n      ArrayType = type_to_array_map.get(type);\n      if (ArrayType === undefined) {\n        throw new Error(`Unknown type ${type}`);\n      }\n    }\n    let HEAPU32 = Module.HEAPU32;\n    let orig_stack_ptr = Module.stackSave();\n    let buffer_struct_ptr = Module.stackAlloc(\n      HEAPU32[(Module._buffer_struct_size >> 2) + 0]\n    );\n    let this_ptr = _getPtr(this);\n    let errcode;\n    try {\n      errcode = Module.__pyproxy_get_buffer(buffer_struct_ptr, this_ptr);\n    } catch (e) {\n      Module.fatal_error(e);\n    }\n    if (errcode === -1) {\n      Module._pythonexc2js();\n    }\n\n    // This has to match the fields in buffer_struct\n    let startByteOffset = HEAPU32[(buffer_struct_ptr >> 2) + 0];\n    let minByteOffset = HEAPU32[(buffer_struct_ptr >> 2) + 1];\n    let maxByteOffset = HEAPU32[(buffer_struct_ptr >> 2) + 2];\n\n    let readonly = !!HEAPU32[(buffer_struct_ptr >> 2) + 3];\n    let format_ptr = HEAPU32[(buffer_struct_ptr >> 2) + 4];\n    let itemsize = HEAPU32[(buffer_struct_ptr >> 2) + 5];\n    let shape = Module.hiwire.pop_value(HEAPU32[(buffer_struct_ptr >> 2) + 6]);\n    let strides = Module.hiwire.pop_value(HEAPU32[(buffer_struct_ptr >> 2) + 7]);\n\n    let view_ptr = HEAPU32[(buffer_struct_ptr >> 2) + 8];\n    let c_contiguous = !!HEAPU32[(buffer_struct_ptr >> 2) + 9];\n    let f_contiguous = !!HEAPU32[(buffer_struct_ptr >> 2) + 10];\n\n    let format = Module.UTF8ToString(format_ptr);\n    Module.stackRestore(orig_stack_ptr);\n\n    let success = (!!0);\n    try {\n      let bigEndian = (!!0);\n      if (ArrayType === undefined) {\n        [ArrayType, bigEndian] = Module.processBufferFormatString(\n          format,\n          \" In this case, you can pass an explicit type argument.\"\n        );\n      }\n      let alignment = parseInt(ArrayType.name.replace(/[^0-9]/g, \"\")) / 8 || 1;\n      if (bigEndian && alignment > 1) {\n        throw new Error(\n          \"Javascript has no native support for big endian buffers. \" +\n            \"In this case, you can pass an explicit type argument. \" +\n            \"For instance, `getBuffer('dataview')` will return a `DataView`\" +\n            \"which has native support for reading big endian data. \" +\n            \"Alternatively, toJs will automatically convert the buffer \" +\n            \"to little endian.\"\n        );\n      }\n      let numBytes = maxByteOffset - minByteOffset;\n      if (\n        numBytes !== 0 &&\n        (startByteOffset % alignment !== 0 ||\n          minByteOffset % alignment !== 0 ||\n          maxByteOffset % alignment !== 0)\n      ) {\n        throw new Error(\n          `Buffer does not have valid alignment for a ${ArrayType.name}`\n        );\n      }\n      let numEntries = numBytes / alignment;\n      let offset = (startByteOffset - minByteOffset) / alignment;\n      let data;\n      if (numBytes === 0) {\n        data = new ArrayType();\n      } else {\n        data = new ArrayType(HEAPU32.buffer, minByteOffset, numEntries);\n      }\n      for (let i of strides.keys()) {\n        strides[i] /= alignment;\n      }\n\n      success = (!!1);\n      let result = Object.create(\n        PyBuffer.prototype,\n        Object.getOwnPropertyDescriptors({\n          offset,\n          readonly,\n          format,\n          itemsize,\n          ndim: shape.length,\n          nbytes: numBytes,\n          shape,\n          strides,\n          data,\n          c_contiguous,\n          f_contiguous,\n          _view_ptr: view_ptr,\n          _released: (!!0),\n        })\n      );\n      // Module.bufferFinalizationRegistry.register(result, view_ptr, result);\n      return result;\n    } finally {\n      if (!success) {\n        try {\n          Module._PyBuffer_Release(view_ptr);\n          Module._PyMem_Free(view_ptr);\n        } catch (e) {\n          Module.fatal_error(e);\n        }\n      }\n    }\n  }\n}\n\n/**\n * @typedef {Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array} TypedArray;\n */\n\n/**\n * A class to allow access to a Python data buffers from Javascript. These are\n * produced by :any:`PyProxy.getBuffer` and cannot be constructed directly.\n * When you are done, release it with the :any:`release <PyBuffer.release>`\n * method.  See\n * `Python buffer protocol documentation\n * <https://docs.python.org/3/c-api/buffer.html>`_ for more information.\n *\n * To find the element ``x[a_1, ..., a_n]``, you could use the following code:\n *\n * .. code-block:: js\n *\n *    function multiIndexToIndex(pybuff, multiIndex){\n *       if(multindex.length !==pybuff.ndim){\n *          throw new Error(\"Wrong length index\");\n *       }\n *       let idx = pybuff.offset;\n *       for(let i = 0; i < pybuff.ndim; i++){\n *          if(multiIndex[i] < 0){\n *             multiIndex[i] = pybuff.shape[i] - multiIndex[i];\n *          }\n *          if(multiIndex[i] < 0 || multiIndex[i] >= pybuff.shape[i]){\n *             throw new Error(\"Index out of range\");\n *          }\n *          idx += multiIndex[i] * pybuff.stride[i];\n *       }\n *       return idx;\n *    }\n *    console.log(\"entry is\", pybuff.data[multiIndexToIndex(pybuff, [2, 0, -1])]);\n *\n * .. admonition:: Contiguity\n *    :class: warning\n *\n *    If the buffer is not contiguous, the ``data`` TypedArray will contain\n *    data that is not part of the buffer. Modifying this data may lead to\n *    undefined behavior.\n *\n * .. admonition:: Readonly buffers\n *    :class: warning\n *\n *    If ``buffer.readonly`` is ``true``, you should not modify the buffer.\n *    Modifying a readonly buffer may lead to undefined behavior.\n *\n * .. admonition:: Converting between TypedArray types\n *    :class: warning\n *\n *    The following naive code to change the type of a typed array does not\n *    work:\n *\n *    .. code-block:: js\n *\n *        // Incorrectly convert a TypedArray.\n *        // Produces a Uint16Array that points to the entire WASM memory!\n *        let myarray = new Uint16Array(buffer.data.buffer);\n *\n *    Instead, if you want to convert the output TypedArray, you need to say:\n *\n *    .. code-block:: js\n *\n *        // Correctly convert a TypedArray.\n *        let myarray = new Uint16Array(\n *            buffer.data.buffer,\n *            buffer.data.byteOffset,\n *            buffer.data.byteLength\n *        );\n */\nexport class PyBuffer {\n  constructor() {\n    /**\n     * The offset of the first entry of the array. For instance if our array\n     * is 3d, then you will find ``array[0,0,0]`` at\n     * ``pybuf.data[pybuf.offset]``\n     * @type {number}\n     */\n    this.offset;\n\n    /**\n     * If the data is readonly, you should not modify it. There is no way\n     * for us to enforce this, but it may cause very weird behavior.\n     * @type {boolean}\n     */\n    this.readonly;\n\n    /**\n     * The format string for the buffer. See `the Python documentation on\n     * format strings\n     * <https://docs.python.org/3/library/struct.html#format-strings>`_.\n     * @type {string}\n     */\n    this.format;\n\n    /**\n     * How large is each entry (in bytes)?\n     * @type {number}\n     */\n    this.itemsize;\n\n    /**\n     * The number of dimensions of the buffer. If ``ndim`` is 0, the buffer\n     * represents a single scalar or struct. Otherwise, it represents an\n     * array.\n     * @type {number}\n     */\n    this.ndim;\n\n    /**\n     * The total number of bytes the buffer takes up. This is equal to\n     * ``buff.data.byteLength``.\n     * @type {number}\n     */\n    this.nbytes;\n\n    /**\n     * The shape of the buffer, that is how long it is in each dimension.\n     * The length will be equal to ``ndim``. For instance, a 2x3x4 array\n     * would have shape ``[2, 3, 4]``.\n     * @type {number[]}\n     */\n    this.shape;\n\n    /**\n     * An array of of length ``ndim`` giving the number of elements to skip\n     * to get to a new element in each dimension. See the example definition\n     * of a ``multiIndexToIndex`` function above.\n     * @type {number[]}\n     */\n    this.strides;\n\n    /**\n     * The actual data. A typed array of an appropriate size backed by a\n     * segment of the WASM memory.\n     *\n     * The ``type`` argument of :any:`PyProxy.getBuffer`\n     * determines which sort of ``TypedArray`` this is. By default\n     * :any:`PyProxy.getBuffer` will look at the format string to determine the most\n     * appropriate option.\n     * @type {TypedArray}\n     */\n    this.data;\n\n    /**\n     * Is it C contiguous?\n     * @type {boolean}\n     */\n    this.c_contiguous;\n\n    /**\n     * Is it Fortran contiguous?\n     * @type {boolean}\n     */\n    this.f_contiguous;\n    throw new TypeError(\"PyBuffer is not a constructor\");\n  }\n\n  /**\n   * Release the buffer. This allows the memory to be reclaimed.\n   */\n  release() {\n    if (this._released) {\n      return;\n    }\n    // Module.bufferFinalizationRegistry.unregister(this);\n    try {\n      Module._PyBuffer_Release(this._view_ptr);\n      Module._PyMem_Free(this._view_ptr);\n    } catch (e) {\n      Module.fatal_error(e);\n    }\n    this._released = (!!1);\n    this.data = null;\n  }\n}\n\n// A special proxy that we use to wrap pyodide.globals to allow property\n// access like `pyodide.globals.x`.\nlet globalsPropertyAccessWarned = (!!0);\nlet globalsPropertyAccessWarningMsg =\n  \"Access to pyodide.globals via pyodide.globals.key is deprecated and \" +\n  \"will be removed in version 0.18.0. Use pyodide.globals.get('key'), \" +\n  \"pyodide.globals.set('key', value), pyodide.globals.delete('key') instead.\";\nlet NamespaceProxyHandlers = {\n  has(obj, key) {\n    return Reflect.has(obj, key) || obj.has(key);\n  },\n  get(obj, key) {\n    if (Reflect.has(obj, key)) {\n      return Reflect.get(obj, key);\n    }\n    let result = obj.get(key);\n    if (!globalsPropertyAccessWarned && result !== undefined) {\n      console.warn(globalsPropertyAccessWarningMsg);\n      globalsPropertyAccessWarned = (!!1);\n    }\n    return result;\n  },\n  set(obj, key, value) {\n    if (Reflect.has(obj, key)) {\n      throw new Error(`Cannot set read only field ${key}`);\n    }\n    if (!globalsPropertyAccessWarned) {\n      globalsPropertyAccessWarned = (!!1);\n      console.warn(globalsPropertyAccessWarningMsg);\n    }\n    obj.set(key, value);\n  },\n  ownKeys(obj) {\n    let result = new Set(Reflect.ownKeys(obj));\n    let iter = obj.keys();\n    for (let key of iter) {\n      result.add(key);\n    }\n    iter.destroy();\n    return Array.from(result);\n  },\n};\n\nexport function wrapNamespace(ns) {\n  return new Proxy(ns, NamespaceProxyHandlers);\n}\n","import { Module } from \"./module.js\";\nimport { loadPackage, loadedPackages } from \"./load-pyodide.js\";\nimport { isPyProxy, PyBuffer } from \"./pyproxy.gen.js\";\nexport { loadPackage, loadedPackages, isPyProxy };\n\n/**\n * @typedef {import('./pyproxy.gen').Py2JsResult} Py2JsResult\n * @typedef {import('./pyproxy.gen').PyProxy} PyProxy\n * @typedef {import('./pyproxy.gen').TypedArray} TypedArray\n * @typedef {import('emscripten')} Emscripten\n */\n\n/**\n * An alias to the Python :py:mod:`pyodide` package.\n *\n * You can use this to call functions defined in the Pyodide Python package\n * from Javascript.\n *\n * @type {PyProxy}\n */\nlet pyodide_py = {}; // actually defined in runPythonSimple in loadPyodide (see pyodide.js)\n\n/**\n *\n * An alias to the global Python namespace.\n *\n * For example, to access a variable called ``foo`` in the Python global\n * scope, use ``pyodide.globals.get(\"foo\")``\n *\n * @type {PyProxy}\n */\nlet globals = {}; // actually defined in runPythonSimple in loadPyodide (see pyodide.js)\n\n/**\n * A Javascript error caused by a Python exception.\n *\n * In order to reduce the risk of large memory leaks, the ``PythonError``\n * contains no reference to the Python exception that caused it. You can find\n * the actual Python exception that caused this error as `sys.last_value\n * <https://docs.python.org/3/library/sys.html#sys.last_value>`_.\n *\n * See :ref:`type-translations-errors` for more information.\n *\n * .. admonition:: Avoid Stack Frames\n *    :class: warning\n *\n *    If you make a :any:`PyProxy` of ``sys.last_value``, you should be\n *    especially careful to :any:`destroy() <PyProxy.destroy>` it when you are\n *    done. You may leak a large amount of memory including the local\n *    variables of all the stack frames in the traceback if you don't. The\n *    easiest way is to only handle the exception in Python.\n *\n * @class\n */\nexport class PythonError {\n  // actually defined in error_handling.c. TODO: would be good to move this\n  // documentation and the definition of PythonError to error_handling.js\n  constructor() {\n    /**\n     * The Python traceback.\n     * @type {string}\n     */\n    this.message;\n  }\n}\n\n/**\n *\n * The Pyodide version.\n *\n * It can be either the exact release version (e.g. ``0.1.0``), or\n * the latest release version followed by the number of commits since, and\n * the git hash of the current commit (e.g. ``0.1.0-1-bd84646``).\n *\n * @type {string}\n */\nexport let version = \"\"; // actually defined in runPythonSimple in loadPyodide (see pyodide.js)\n\n/**\n * Runs a string of Python code from Javascript.\n *\n * The last part of the string may be an expression, in which case, its value\n * is returned.\n *\n * @param {string} code Python code to evaluate\n * @param {PyProxy} globals An optional Python dictionary to use as the globals.\n *        Defaults to :any:`pyodide.globals`. Uses the Python API\n *        :any:`pyodide.eval_code` to evaluate the code.\n * @returns {Py2JsResult} The result of the Python code translated to Javascript. See the\n *          documentation for :any:`pyodide.eval_code` for more info.\n */\nexport function runPython(code, globals = Module.globals) {\n  return Module.pyodide_py.eval_code(code, globals);\n}\nModule.runPython = runPython;\n\n/**\n * @callback LogFn\n * @param {string} msg\n * @returns {void}\n * @private\n */\n\n/**\n * Inspect a Python code chunk and use :js:func:`pyodide.loadPackage` to\n * install any known packages that the code chunk imports. Uses the Python API\n * :func:`pyodide.find\\_imports` to inspect the code.\n *\n * For example, given the following code as input\n *\n * .. code-block:: python\n *\n *    import numpy as np x = np.array([1, 2, 3])\n *\n * :js:func:`loadPackagesFromImports` will call\n * ``pyodide.loadPackage(['numpy'])``. See also :js:func:`runPythonAsync`.\n *\n * @param {string} code The code to inspect.\n * @param {LogFn=} messageCallback The ``messageCallback`` argument of\n * :any:`pyodide.loadPackage` (optional).\n * @param {LogFn=} errorCallback The ``errorCallback`` argument of\n * :any:`pyodide.loadPackage` (optional).\n * @async\n */\nexport async function loadPackagesFromImports(\n  code,\n  messageCallback,\n  errorCallback\n) {\n  let pyimports = Module.pyodide_py.find_imports(code);\n  let imports;\n  try {\n    imports = pyimports.toJs();\n  } finally {\n    pyimports.destroy();\n  }\n  if (imports.length === 0) {\n    return;\n  }\n\n  let packageNames = Module._import_name_to_package_name;\n  let packages = new Set();\n  for (let name of imports) {\n    if (packageNames.has(name)) {\n      packages.add(packageNames.get(name));\n    }\n  }\n  if (packages.size) {\n    await loadPackage(Array.from(packages), messageCallback, errorCallback);\n  }\n}\n\n/**\n * Access a Python object in the global namespace from Javascript.\n *\n * @deprecated This function will be removed in version 0.18.0. Use\n *    :any:`pyodide.globals.get('key') <pyodide.globals>` instead.\n *\n * @param {string} name Python variable name\n * @returns {Py2JsResult} The Python object translated to Javascript.\n */\nexport function pyimport(name) {\n  console.warn(\n    \"Access to the Python global namespace via pyodide.pyimport is deprecated and \" +\n      \"will be removed in version 0.18.0. Use pyodide.globals.get('key') instead.\"\n  );\n  return Module.globals.get(name);\n}\n/**\n * Runs Python code using `PyCF_ALLOW_TOP_LEVEL_AWAIT\n * <https://docs.python.org/3/library/ast.html?highlight=pycf_allow_top_level_await#ast.PyCF_ALLOW_TOP_LEVEL_AWAIT>`_.\n *\n * For example:\n *\n * .. code-block:: pyodide\n *\n *    let result = await pyodide.runPythonAsync(`\n *        from js import fetch\n *        response = await fetch(\"./packages.json\")\n *        packages = await response.json()\n *        # If final statement is an expression, its value is returned to\n * Javascript len(packages['packages'].object_keys())\n *    `);\n *    console.log(result); // 72\n *\n * @param {string} code Python code to evaluate\n * @returns {Py2JsResult} The result of the Python code translated to Javascript.\n * @async\n */\nexport async function runPythonAsync(code) {\n  let coroutine = Module.pyodide_py.eval_code_async(code, Module.globals);\n  try {\n    let result = await coroutine;\n    return result;\n  } finally {\n    coroutine.destroy();\n  }\n}\nModule.runPythonAsync = runPythonAsync;\n\n/**\n * Registers the Javascript object ``module`` as a Javascript module named\n * ``name``. This module can then be imported from Python using the standard\n * Python import system. If another module by the same name has already been\n * imported, this won't have much effect unless you also delete the imported\n * module from ``sys.modules``. This calls the ``pyodide_py`` API\n * :func:`pyodide.register_js_module`.\n *\n * @param {string} name Name of the Javascript module to add\n * @param {object} module Javascript object backing the module\n */\nexport function registerJsModule(name, module) {\n  Module.pyodide_py.register_js_module(name, module);\n}\n\n/**\n * Tell Pyodide about Comlink.\n * Necessary to enable importing Comlink proxies into Python.\n */\nexport function registerComlink(Comlink) {\n  Module._Comlink = Comlink;\n}\n\n/**\n * Unregisters a Javascript module with given name that has been previously\n * registered with :js:func:`pyodide.registerJsModule` or\n * :func:`pyodide.register_js_module`. If a Javascript module with that name\n * does not already exist, will throw an error. Note that if the module has\n * already been imported, this won't have much effect unless you also delete\n * the imported module from ``sys.modules``. This calls the ``pyodide_py`` API\n * :func:`pyodide.unregister_js_module`.\n *\n * @param {string} name Name of the Javascript module to remove\n */\nexport function unregisterJsModule(name) {\n  Module.pyodide_py.unregister_js_module(name);\n}\n\n/**\n * Convert the Javascript object to a Python object as best as possible.\n *\n * This is similar to :any:`JsProxy.to_py` but for use from Javascript. If the\n * object is immutable or a :any:`PyProxy`, it will be returned unchanged. If\n * the object cannot be converted into Python, it will be returned unchanged.\n *\n * See :ref:`type-translations-jsproxy-to-py` for more information.\n *\n * @param {*} obj\n * @param {object} options\n * @param {number} options.depth Optional argument to limit the depth of the\n * conversion.\n * @returns {PyProxy} The object converted to Python.\n */\nexport function toPy(obj, { depth = -1 } = {}) {\n  // No point in converting these, it'd be dumb to proxy them so they'd just\n  // get converted back by `js2python` at the end\n  switch (typeof obj) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n    case \"bigint\":\n    case \"undefined\":\n      return obj;\n  }\n  if (!obj || Module.isPyProxy(obj)) {\n    return obj;\n  }\n  let obj_id = 0;\n  let py_result = 0;\n  let result = 0;\n  try {\n    obj_id = Module.hiwire.new_value(obj);\n    py_result = Module.__js2python_convert(obj_id, new Map(), depth);\n    if (py_result === 0) {\n      Module._pythonexc2js();\n    }\n    if (Module._JsProxy_Check(py_result)) {\n      // Oops, just created a JsProxy. Return the original object.\n      return obj;\n      // return Module.pyproxy_new(py_result);\n    }\n    result = Module._python2js(py_result);\n    if (result === 0) {\n      Module._pythonexc2js();\n    }\n  } finally {\n    Module.hiwire.decref(obj_id);\n    Module._Py_DecRef(py_result);\n  }\n  return Module.hiwire.pop_value(result);\n}\n\n/**\n * @private\n */\nModule.saveState = () => Module.pyodide_py._state.save_state();\n\n/**\n * @private\n */\nModule.restoreState = (state) => Module.pyodide_py._state.restore_state(state);\n\n/**\n * @param {TypedArray} interrupt_buffer\n */\nfunction setInterruptBuffer(interrupt_buffer) {}\nsetInterruptBuffer = Module.setInterruptBuffer;\nexport { setInterruptBuffer };\n\nexport function makePublicAPI() {\n  /**\n   * An alias to the `Emscripten File System API\n   * <https://emscripten.org/docs/api_reference/Filesystem-API.html>`_.\n   *\n   * This provides a wide range of POSIX-`like` file/device operations, including\n   * `mount\n   * <https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.mount>`_\n   * which can be used to extend the in-memory filesystem with features like `persistence\n   * <https://emscripten.org/docs/api_reference/Filesystem-API.html#persistent-data>`_.\n   *\n   * While all of the file systems implementations are enabled, only the default\n   * ``MEMFS`` is guaranteed to work in all runtime settings. The implementations\n   * are available as members of ``FS.filesystems``:\n   * ``IDBFS``, ``NODEFS``, ``PROXYFS``, ``WORKERFS``.\n   *\n   * @type {FS} The Emscripten File System API.\n   */\n  const FS = Module.FS;\n\n  let namespace = {\n    globals,\n    FS,\n    pyodide_py,\n    version,\n    loadPackage,\n    loadPackagesFromImports,\n    loadedPackages,\n    isPyProxy,\n    pyimport,\n    runPython,\n    runPythonAsync,\n    registerJsModule,\n    unregisterJsModule,\n    setInterruptBuffer,\n    toPy,\n    registerComlink,\n    PythonError,\n    PyBuffer,\n  };\n\n  namespace._module = Module; // @private\n  Module.public_api = namespace;\n  return namespace;\n}\n","/**\n * The main bootstrap code for loading pyodide.\n */\nimport { Module } from \"./module.js\";\nimport {\n  loadScript,\n  initializePackageIndex,\n  loadPackage,\n} from \"./load-pyodide.js\";\nimport { makePublicAPI, registerJsModule } from \"./api.js\";\nimport \"./pyproxy.gen.js\";\n\nimport { wrapNamespace } from \"./pyproxy.gen.js\";\n\n/**\n * @typedef {import('./pyproxy.gen').PyProxy} PyProxy\n * @typedef {import('./pyproxy.gen').PyProxyWithLength} PyProxyWithLength\n * @typedef {import('./pyproxy.gen').PyProxyWithGet} PyProxyWithGet\n * @typedef {import('./pyproxy.gen').PyProxyWithSet} PyProxyWithSet\n * @typedef {import('./pyproxy.gen').PyProxyWithHas} PyProxyWithHas\n * @typedef {import('./pyproxy.gen').PyProxyIterable} PyProxyIterable\n * @typedef {import('./pyproxy.gen').PyProxyIterator} PyProxyIterator\n * @typedef {import('./pyproxy.gen').PyProxyAwaitable} PyProxyAwaitable\n * @typedef {import('./pyproxy.gen').PyProxyBuffer} PyProxyBuffer\n * @typedef {import('./pyproxy.gen').PyProxyCallable} PyProxyCallable\n *\n * @typedef {import('./pyproxy.gen').Py2JsResult} Py2JsResult\n *\n * @typedef {import('./pyproxy.gen').TypedArray} TypedArray\n * @typedef {import('./pyproxy.gen').PyBuffer} PyBuffer\n */\n\n/**\n * Dump the Python traceback to the browser console.\n *\n * @private\n */\nModule.dump_traceback = function () {\n  let fd_stdout = 1;\n  Module.__Py_DumpTraceback(fd_stdout, Module._PyGILState_GetThisThreadState());\n};\n\nlet fatal_error_occurred = false;\n/**\n * Signal a fatal error.\n *\n * Dumps the Python traceback, shows a Javascript traceback, and prints a clear\n * message indicating a fatal error. It then dummies out the public API so that\n * further attempts to use Pyodide will clearly indicate that Pyodide has failed\n * and can no longer be used. pyodide._module is left accessible and it is\n * possible to continue using Pyodide for debugging purposes if desired.\n *\n * @argument e {Error} The cause of the fatal error.\n * @private\n */\nModule.fatal_error = function (e) {\n  if (fatal_error_occurred) {\n    console.error(\"Recursive call to fatal_error. Inner error was:\");\n    console.error(e);\n    return;\n  }\n  fatal_error_occurred = true;\n  console.error(\n    \"Pyodide has suffered a fatal error. Please report this to the Pyodide maintainers.\"\n  );\n  console.error(\"The cause of the fatal error was:\");\n  if (Module.inTestHoist) {\n    // Test hoist won't print the error object in a useful way so convert it to\n    // string.\n    console.error(e.toString());\n    console.error(e.stack);\n  } else {\n    console.error(e);\n  }\n  try {\n    Module.dump_traceback();\n    for (let key of Object.keys(Module.public_api)) {\n      if (key.startsWith(\"_\") || key === \"version\") {\n        continue;\n      }\n      Object.defineProperty(Module.public_api, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => {\n          throw new Error(\n            \"Pyodide already fatally failed and can no longer be used.\"\n          );\n        },\n      });\n    }\n    if (Module.on_fatal) {\n      Module.on_fatal(e);\n    }\n  } catch (err2) {\n    console.error(\"Another error occurred while handling the fatal error:\");\n    console.error(err2);\n  }\n  throw e;\n};\n\n/**\n * Run Python code in the simplest way possible. The primary purpose of this\n * method is for bootstrapping. It is also useful for debugging: If the Python\n * interpreter is initialized successfully then it should be possible to use\n * this method to run Python code even if everything else in the Pyodide\n * `core` module fails.\n *\n * The differences are:\n *    1. `runPythonSimple` doesn't return anything (and so won't leak\n *        PyProxies)\n *    2. `runPythonSimple` doesn't require access to any state on the\n *       Javascript `pyodide` module.\n *    3. `runPython` uses `pyodide.eval_code`, whereas `runPythonSimple` uses\n *       `PyRun_String` which is the C API for `eval` / `exec`.\n *    4. `runPythonSimple` runs with `globals` a separate dict which is called\n *       `init_dict` (keeps global state private)\n *    5. `runPythonSimple` doesn't dedent the argument\n *\n * When `core` initialization is completed, the globals for `runPythonSimple`\n * is made available as `Module.init_dict`.\n *\n * @private\n */\nModule.runPythonSimple = function (code) {\n  let code_c_string = Module.stringToNewUTF8(code);\n  let errcode;\n  try {\n    errcode = Module._run_python_simple_inner(code_c_string);\n  } catch (e) {\n    Module.fatal_error(e);\n  } finally {\n    Module._free(code_c_string);\n  }\n  if (errcode === -1) {\n    Module._pythonexc2js();\n  }\n};\n\n/**\n * The Javascript/Wasm call stack is too small to handle the default Python call\n * stack limit of 1000 frames. Here, we determine the Javascript call stack\n * depth available, and then divide by 50 (determined heuristically) to set the\n * maximum Python call stack depth.\n *\n * @private\n */\nfunction fixRecursionLimit() {\n  let depth = 0;\n  function recurse() {\n    depth += 1;\n    recurse();\n  }\n  try {\n    recurse();\n  } catch (err) {}\n\n  let recursionLimit = Math.min(depth / 25, 500);\n  Module.runPythonSimple(\n    `import sys; sys.setrecursionlimit(int(${recursionLimit}))`\n  );\n}\n\n/**\n * Load the main Pyodide wasm module and initialize it.\n *\n * Only one copy of Pyodide can be loaded in a given Javascript global scope\n * because Pyodide uses global variables to load packages. If an attempt is made\n * to load a second copy of Pyodide, :any:`loadPyodide` will throw an error.\n * (This can be fixed once `Firefox adopts support for ES6 modules in webworkers\n * <https://bugzilla.mozilla.org/show_bug.cgi?id=1247687>`_.)\n *\n * @param {{ indexURL : string, fullStdLib? : boolean = true }} config\n * @param {string} config.indexURL - The URL from which Pyodide will load\n * packages\n * @param {boolean} config.fullStdLib - Load the full Python standard library.\n * Setting this to false excludes following modules: distutils.\n * Default: true\n * @returns The :ref:`js-api-pyodide` module.\n * @memberof globalThis\n * @async\n */\nexport async function loadPyodide(config) {\n  const default_config = { fullStdLib: true, jsglobals: globalThis };\n  config = Object.assign(default_config, config);\n  if (globalThis.__pyodide_module) {\n    if (globalThis.languagePluginURL) {\n      throw new Error(\n        \"Pyodide is already loading because languagePluginURL is defined.\"\n      );\n    } else {\n      throw new Error(\"Pyodide is already loading.\");\n    }\n  }\n  // A global \"mount point\" for the package loaders to talk to pyodide\n  // See \"--export-name=__pyodide_module\" in buildpkg.py\n  globalThis.__pyodide_module = Module;\n  loadPyodide.inProgress = true;\n  if (!config.indexURL) {\n    throw new Error(\"Please provide indexURL parameter to loadPyodide\");\n  }\n  let baseURL = config.indexURL;\n  if (!baseURL.endsWith(\"/\")) {\n    baseURL += \"/\";\n  }\n  Module.indexURL = baseURL;\n  let packageIndexReady = initializePackageIndex(baseURL);\n\n  Module.locateFile = (path) => baseURL + path;\n  let moduleLoaded = new Promise((r) => (Module.postRun = r));\n\n  const scriptSrc = `${baseURL}pyodide.asm.js`;\n  await loadScript(scriptSrc);\n\n  // _createPyodideModule is specified in the Makefile by the linker flag:\n  // `-s EXPORT_NAME=\"'_createPyodideModule'\"`\n  await _createPyodideModule(Module);\n\n  // There is some work to be done between the module being \"ready\" and postRun\n  // being called.\n  await moduleLoaded;\n\n  fixRecursionLimit();\n  let pyodide = makePublicAPI();\n\n  // Bootstrap steps:\n  //\n  //   1. _pyodide_core is ready now so we can call _pyodide.register_js_finder\n  //   2. Use the jsfinder to register the js and pyodide_js packages\n  //   3. Import pyodide, this requires _pyodide_core, js and pyodide_js to be\n  //      ready.\n  //   4. Add the pyodide_py and Python __main__.__dict__ objects to pyodide_js\n  Module.runPythonSimple(`\ndef temp(pyodide_js, Module, jsglobals):\n  from _pyodide._importhook import register_js_finder\n  jsfinder = register_js_finder()\n  jsfinder.register_js_module(\"js\", jsglobals)\n  jsfinder.register_js_module(\"pyodide_js\", pyodide_js)\n\n  import pyodide\n  import __main__\n  import builtins\n\n  globals = __main__.__dict__\n  globals.update(builtins.__dict__)\n\n  Module.version = pyodide.__version__\n  Module.globals = globals\n  Module.builtins = builtins.__dict__\n  Module.pyodide_py = pyodide\n  print(\"Python initialization complete\")\n`);\n\n  Module.init_dict.get(\"temp\")(pyodide, Module, config.jsglobals);\n  // Module.runPython works starting from here!\n\n  // Wrap \"globals\" in a special Proxy that allows `pyodide.globals.x` access.\n  // TODO: Should we have this?\n  Module.globals = wrapNamespace(Module.globals);\n\n  pyodide.globals = Module.globals;\n  pyodide.pyodide_py = Module.pyodide_py;\n  pyodide.version = Module.version;\n\n  await packageIndexReady;\n  if (config.fullStdLib) {\n    await loadPackage([\"distutils\"]);\n  }\n\n  return pyodide;\n}\nglobalThis.loadPyodide = loadPyodide;\n\nif (globalThis.languagePluginUrl) {\n  console.warn(\n    \"languagePluginUrl is deprecated and will be removed in version 0.18.0, \" +\n      \"instead use loadPyodide({ indexURL : <some_url>})\"\n  );\n\n  /**\n   * A deprecated parameter that specifies the Pyodide ``indexURL``. If present,\n   * Pyodide will automatically invoke\n   * ``loadPyodide({indexURL : languagePluginUrl})``\n   * and will store the resulting promise in\n   * :any:`globalThis.languagePluginLoader`. Use :any:`loadPyodide`\n   * directly instead of defining this.\n   *\n   * @type String\n   * @deprecated Will be removed in version 0.18.0\n   */\n  globalThis.languagePluginUrl;\n\n  /**\n   * A deprecated promise that resolves to ``undefined`` when Pyodide is\n   * finished loading. Only created if :any:`languagePluginUrl` is\n   * defined. Instead use :any:`loadPyodide`.\n   *\n   * @type Promise\n   * @deprecated Will be removed in version 0.18.0\n   */\n  globalThis.languagePluginLoader = loadPyodide({\n    indexURL: globalThis.languagePluginUrl,\n  }).then((pyodide) => (self.pyodide = pyodide));\n}\n"],"names":["Module","noImageDecoding","noAudioDecoding","noWasmDecoding","preloadedWasm","IN_NODE","process","release","name","baseURL","async","initializePackageIndex","indexURL","package_json","fsPromises","import","package_string","readFile","JSON","parse","response","fetch","json","packages","Error","_import_name_to_package_name","Map","Object","keys","import_name","imports","set","package_uri_regexp","_uri_to_package_name","package_uri","match","exec","toLowerCase","loadScript","globalThis","document","url","importScripts","pathPromise","then","M","default","fetchPromise","vmPromise","includes","runInThisContext","text","path","resolve","recursiveDependencies","names","_messageCallback","errorCallback","sharedLibsOnly","toLoad","addPackage","has","undefined","loadedPackages","dep_name","depends","pkgname","get","onlySharedLibs","c","shared_library","_loadPackage","messageCallback","locateFile","pkg","replace","size","Promise","Array","from","join","scriptPromises","uri","loaded","scriptSrc","push","catch","e","delete","all","promise","r","monitorRunDependencies","n","addRunDependency","removeRunDependency","resolveMsg","packageList","length","reportUndefinedSymbols","runPythonSimple","_package_lock","loadPackage","isPyProxy","temp","toJs","destroy","isArray","oldPlugin","sharedLibraryNames","sharedLibraryPackagesToLoad","p","preloadPlugins","canHandle","loadPluginOverride","Proxy","obj","prop","bytes","apply","arguments","this","loadDynamicLibrary","global","nodelete","unshift","releaseLock","old_lock","acquirePackageLock","console","log","error","shift","jsobj","$$","type","FinalizationRegistry","finalizationRegistry","ptr","cache","pyproxy_decref_cache","_Py_DecRef","fatal_error","register","unregister","trace_pyproxy_alloc","trace_pyproxy_dealloc","pyproxy_alloc_map","_getPtr","destroyed_msg","enable_pyproxy_allocation_tracing","proxy","stack","disable_pyproxy_allocation_tracing","pyproxy_new","ptrobj","target","flags","_pyproxy_getflags","cls","getPyProxyClass","Reflect","construct","Function","prototype","create","cacheId","hiwire","new_value","refcnt","defineProperty","value","borrowed","_Py_IncRef","PyProxyHandlers","pyproxyClassMap","result","descriptors","feature_flag","methods","PyProxyLengthMethods","PyProxyGetItemMethods","PyProxySetItemMethods","PyProxyContainsMethods","PyProxyIterableMethods","PyProxyIteratorMethods","PyProxyAwaitableMethods","PyProxyBufferMethods","PyProxyCallableMethods","assign","getOwnPropertyDescriptors","constructor","getOwnPropertyDescriptor","PyProxyClass","$$flags","new_proto","NewPyProxyClass","PyProxy_getPtr","pyproxy_mark_borrowed","cache_map","pop_value","proxy_id","values","pyproxy_destroy","callPyObjectKwargs","jsargs","kwargs","pop","num_pos_args","kwargs_names","kwargs_values","num_kwargs","idresult","idargs","idkwnames","__pyproxy_apply","decref","_pythonexc2js","callPyObject","TypeError","Symbol","toStringTag","__pyproxy_type","toString","jsref_repr","__pyproxy_repr","copy","depth","pyproxies","create_pyproxies","dict_converter","proxies_id","dict_converter_id","_python2js_custom_dict_converter","supportsLength","supportsGet","supportsSet","supportsHas","isIterable","isIterator","isAwaitable","isBuffer","isCallable","_PyObject_Size","key","idkey","__pyproxy_getitem","_PyErr_Occurred","errcode","idval","__pyproxy_setitem","__pyproxy_delitem","__pyproxy_contains","TempError","iterator","iterptr","token","_PyObject_GetIter","item","__pyproxy_iter_next","iter_helper","next","arg","done","idarg","__pyproxyGen_Send","__pyproxyGen_FetchStopIterationValue","isExtensible","jskey","startsWith","slice","__pyproxy_hasattr","python_hasattr","__pyproxy_getattr","python_getattr","jsval","descr","writable","__pyproxy_setattr","python_setattr","deleteProperty","__pyproxy_delattr","python_delattr","configurable","ownKeys","__pyproxy_ownKeys","jsthis","_ensure_future","resolveHandle","rejectHandle","reject","resolve_handle_id","reject_handle_id","__pyproxy_ensure_future","onFulfilled","onRejected","finally","onFinally","call","callKwargs","type_to_array_map","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","BigInt64Array","BigUint64Array","Float32Array","Float64Array","DataView","getBuffer","ArrayType","HEAPU32","orig_stack_ptr","stackSave","buffer_struct_ptr","stackAlloc","_buffer_struct_size","this_ptr","__pyproxy_get_buffer","startByteOffset","minByteOffset","maxByteOffset","readonly","format_ptr","itemsize","shape","strides","view_ptr","c_contiguous","f_contiguous","format","UTF8ToString","stackRestore","success","bigEndian","processBufferFormatString","alignment","parseInt","numBytes","data","numEntries","offset","buffer","i","PyBuffer","ndim","nbytes","_view_ptr","_released","_PyBuffer_Release","_PyMem_Free","globalsPropertyAccessWarned","globalsPropertyAccessWarningMsg","NamespaceProxyHandlers","warn","Set","iter","add","pyodide_py","globals","PythonError","message","runPython","code","eval_code","loadPackagesFromImports","pyimports","find_imports","packageNames","pyimport","runPythonAsync","coroutine","eval_code_async","registerJsModule","module","register_js_module","registerComlink","Comlink","_Comlink","unregisterJsModule","unregister_js_module","toPy","obj_id","py_result","__js2python_convert","_JsProxy_Check","_python2js","setInterruptBuffer","interrupt_buffer","saveState","_state","save_state","restoreState","state","restore_state","dump_traceback","__Py_DumpTraceback","_PyGILState_GetThisThreadState","fatal_error_occurred","loadPyodide","config","default_config","fullStdLib","jsglobals","__pyodide_module","languagePluginURL","inProgress","endsWith","packageIndexReady","moduleLoaded","postRun","_createPyodideModule","recurse","err","recursionLimit","Math","min","fixRecursionLimit","pyodide","FS","namespace","version","_module","public_api","makePublicAPI","ns","init_dict","inTestHoist","enumerable","on_fatal","err2","code_c_string","stringToNewUTF8","_run_python_simple_inner","_free","languagePluginUrl","languagePluginLoader","self"],"mappings":"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"}